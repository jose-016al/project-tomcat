/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package frmrelojmundial;

import java.awt.Image;
import java.awt.Toolkit;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.time.LocalTime;
import java.time.format.DateTimeFormatter;
import javax.swing.JOptionPane;
import relojmundial.*;
// Jose Almiron
public class frmRelojMundial extends javax.swing.JFrame implements GeneradorSegundosListener {
    
    private String ZonaHorariaSeleccionada;
    private GeneradorSegundos generador;
    
    public frmRelojMundial() {
        initComponents();
        this.ZonaHorariaSeleccionada = "Europe/Madrid";
        this.generador = new GeneradorSegundos(this);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        cmbZonaHoraria = new javax.swing.JComboBox<>();
        lblReloj = new javax.swing.JLabel();
        cmdCambiarZonaHoraria = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Reloj mundial (c) 2022 Jose Almiron");
        setIconImage(getIconImage());
        setName("frame"); // NOI18N
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jLabel1.setText("Zona horaria:");

        lblReloj.setFont(new java.awt.Font("Dialog", 1, 40)); // NOI18N
        lblReloj.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        cmdCambiarZonaHoraria.setText("Cambiar zona horaria");
        cmdCambiarZonaHoraria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdCambiarZonaHorariaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(cmbZonaHoraria, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(cmdCambiarZonaHoraria)
                .addContainerGap(26, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblReloj, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(cmbZonaHoraria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmdCambiarZonaHoraria))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblReloj, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(12, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        rellenarComboBoxZonasHorarias();
        cmbZonaHoraria.setSelectedItem(this.ZonaHorariaSeleccionada);
        generador.start();
    }//GEN-LAST:event_formWindowOpened

    private void cmdCambiarZonaHorariaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdCambiarZonaHorariaActionPerformed
        this.ZonaHorariaSeleccionada = cmbZonaHoraria.getSelectedItem().toString();
    }//GEN-LAST:event_cmdCambiarZonaHorariaActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        generador.detener();
    }//GEN-LAST:event_formWindowClosing

    public void rellenarComboBoxZonasHorarias() {
        PlanetaTierra p = new PlanetaTierra();
        String [] zonas = p.getZonasHorariasDisponibles();
        int i = 0;
        for (String s : zonas) {
            cmbZonaHoraria.addItem(zonas[i++]);
        }
    }
    
    public void mostrarHora() {
        String seleccion = cmbZonaHoraria.getSelectedItem().toString();
        PlanetaTierra p = new PlanetaTierra();
        String hora = "La hora actual de la zona " + seleccion + " es: " + p.getHora(seleccion);
        JOptionPane.showMessageDialog(this,  hora,  "Hora",  JOptionPane.INFORMATION_MESSAGE);
    }
    
    @Override
    public Image getIconImage() {
        Image imagen = Toolkit.getDefaultToolkit().getImage(ClassLoader.getSystemResource("iconos/icono.png"));
        return imagen;
    }
    
    @Override
    public void procesarSegundo() {
        PlanetaTierra p = new PlanetaTierra();
        LocalTime horas = p.getHora(ZonaHorariaSeleccionada);
        LocalDate fecha = LocalDate.now();
        LocalDateTime time = LocalDateTime.of(fecha, horas);
        DateTimeFormatter formatter = DateTimeFormatter.ofPattern("HH:mm:ss");
        String formato = time.format(formatter);
        lblReloj.setText(formato);
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frmRelojMundial.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frmRelojMundial.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frmRelojMundial.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frmRelojMundial.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frmRelojMundial().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> cmbZonaHoraria;
    private javax.swing.JButton cmdCambiarZonaHoraria;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel lblReloj;
    // End of variables declaration//GEN-END:variables
}
